import { ISettings, IDateTime, IFileSaver, IInventoryPane, IMapStyle, IScriptDoc, IStatsDatum } from '../types/iquest';
export declare class Settings implements ISettings {
    afterEnter?: any;
    afterFinish: any[];
    afterTurn: any[];
    author?: string;
    autoscroll?: boolean;
    beforeEnter?: any;
    closeQuotation?: string;
    cmdEcho?: boolean;
    compassPane?: boolean;
    convertNumbersInParser?: boolean;
    cssFolder?: string;
    cursor?: string;
    customExits?: boolean;
    customLibraries: any[];
    customPaneFunctions?: IFileSaver;
    darkModeActive?: boolean;
    dateTime?: IDateTime;
    delayStart?: boolean;
    eventFunctions?: IFileSaver;
    failCountsAsTurn?: boolean;
    favicon?: string;
    files: string[];
    fluids: any[];
    folder?: string;
    funcForDisambigMenu?: string;
    funcForDynamicConv?: string;
    givePlayerAskTellMsg?: boolean;
    givePlayerSayMsg?: boolean;
    iconsFolder?: string;
    ifid?: string;
    imagesFolder?: string;
    inventoryPane: IInventoryPane[];
    lang?: string;
    libraries: string[];
    lookCountsAsTurn?: boolean;
    mapAndImageCollapseAt?: number;
    mapStyle?: IMapStyle;
    maxUndo: number;
    mediaQuery?: IFileSaver;
    moneyFormat?: string;
    narrowMode?: number;
    noAskTell?: string;
    noTalkTo?: string;
    npcReactionsAlways?: boolean;
    openQuotation?: string;
    panes?: string;
    panesCollapseAt?: number;
    performanceLogStartTime?: number;
    plainFontModeActive?: boolean;
    playMode: 'dev' | 'game';
    questVersion?: string;
    roomSetList?: IFileSaver;
    roomTemplate: string[];
    saveDisabled?: boolean;
    saveLoadExcludedAtts: string[];
    scriptDoc?: IScriptDoc;
    scriptLoading?: string;
    scriptLoadLogging?: boolean;
    scriptToLoad: any[];
    silent?: boolean;
    soundsFileExt?: string;
    soundsFolder?: string;
    startingDialogEnabled?: boolean;
    statsData: IStatsDatum[];
    status: any;
    statusPane?: string;
    statusWidthLeft?: number;
    statusWidthRight?: number;
    styleFile?: string;
    symbolsForCompass?: boolean;
    tests?: boolean;
    textEffectDelay?: number;
    textInput?: boolean;
    thanks: any[];
    themes: string[];
    timerInterval?: number;
    title?: string;
    turnsQuestionsLast?: number;
    verbosity?: number;
    version?: string;
    videosFolder?: string;
    walkthroughMenuResponses: any[];
    warnings: string;
    sceneryInSidePane: string;
    [key: string]: any;
    constructor(data: Partial<Settings>);
    add(data: Partial<Settings>): void;
    getDefaultRoomHeading(item: any): any;
    isHeldNotWorn(item: any): boolean;
    isHere(item: any): any;
    isWorn(item: any): any;
    loadCssFiles(doc?: Document, path?: string): void;
    loadCssFile(filename: any, doc?: Document, path?: string): void;
    loadFavicon(): void;
    loadScript(filename: any, doc?: Document): void;
    scriptOnLoad(): void;
    writeScript(folder: any): void;
    performanceLogStart(): void;
    performanceLog(s: any): void;
    setUpDialog(): void;
}
export declare const settings: Settings;
//# sourceMappingURL=_settings.d.ts.map