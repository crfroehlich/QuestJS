export declare function processText(str: any, params: any): any;
export declare const setLoadString: (s: any) => any;
export declare const getSaveString: () => string;
export declare const usedStrings: string[];
export declare const colours: string[];
export declare const addDirective: (name: any, fn: any) => void;
export declare const text_processors: {
    $: (arr: any, params: any) => any;
    b: (arr: any, params: any) => string;
    big: (arr: any, params: any) => string;
    cap: (arr: any, params: any) => any;
    cmd: (arr: any, params: any) => any;
    code: (arr: any, params: any) => string;
    command: (arr: any, params: any) => any;
    contents: (arr: any, params: any) => any;
    dateTime: (arr: any, params: any) => any;
    encode: (arr: any, params: any) => string;
    exit: (arr: any, params: any) => any;
    first(arr: any, params: any): any;
    handleIfExists: (arr: any, params: any, reverse: any) => any;
    hour: (arr: any, params: any) => any;
    huge: (arr: any, params: any) => string;
    i: (arr: any, params: any) => string;
    if: (arr: any, params: any) => any;
    ifExists: (arr: any, params: any) => any;
    ifHeld: (arr: any, params: any) => any;
    font: (arr: any, params: any) => string;
    ifHere: (arr: any, params: any) => any;
    color: (arr: any, params: any) => string;
    ifIs: (arr: any, params: any) => any;
    ifLessThan: (arr: any, params: any) => any;
    ifLessThanOrEqual: (arr: any, params: any) => any;
    ifMoreThan: (arr: any, params: any) => any;
    ifMoreThanOrEqual: (arr: any, params: any) => any;
    dialogue: (arr: any, params: any) => string;
    ifNot: (arr: any, params: any) => any;
    back: (arr: any, params: any) => string;
    ifNotExists: (arr: any, params: any) => any;
    colour: (arr: any, params: any) => string;
    ifNotHeld: (arr: any, params: any) => any;
    ifNotHere: (arr: any, params: any) => any;
    ifNotIs: (arr: any, params: any) => any;
    ifNotPlayer: (arr: any, params: any) => any;
    ifPlayer: (arr: any, params: any) => any;
    cj: (arr: any, params: any) => any;
    img: (arr: any, params: any) => string;
    klass: (arr: any, params: any) => string;
    link: (arr: any, params: any) => string;
    exits: (arr: any, params: any) => any;
    lower: (arr: any, params: any) => any;
    exitsHere: (arr: any, params: any) => any;
    money: (arr: any, params: any) => any;
    hereName: (arr: any, params: any) => any;
    multi: (arr: any, params: any) => string;
    hereDesc: (arr: any, params: any) => any;
    nm: (arr: any, params: any) => any;
    blur: (arr: any, params: any) => string;
    number: (arr: any, params: any) => any;
    nms: (arr: any, params: any) => any;
    nv: (arr: any, params: any) => any;
    notfirst: (arr: any, params: any) => any;
    terse: (arr: any, params: any) => any;
    ob: (arr: any, params: any) => any;
    object: (arr: any, params: any) => any;
    objects: (arr: any, params: any) => any;
    objectsHere: (arr: any, params: any) => any;
    once(arr: any, params: any): any;
    ordinal: (arr: any, params: any) => any;
    pa: (arr: any, params: any) => any;
    pa2: (arr: any, params: any) => any;
    pa3: (arr: any, params: any) => any;
    page: (arr: any, params: any) => any;
    sup: (arr: any, params: any) => string;
    popup: (arr: any, params: any) => string;
    ps: (arr: any, params: any) => any;
    pv: (arr: any, params: any) => any;
    rainbow: (arr: any, params: any) => string;
    sub: (arr: any, params: any) => string;
    random: (arr: any, params: any) => any;
    rf: (arr: any, params: any) => any;
    rndalt: (arr: any, params: any) => any;
    roomSet: (arr: any, params: any) => any;
    s: (arr: any, params: any) => string;
    sb: (arr: any, params: any) => any;
    select(arr: any, params: any): any;
    selectEnd: (arr: any, params: any) => any;
    selectNone: (arr: any, params: any) => any;
    selectStart: (arr: any, params: any) => any;
    selectWrap: (arr: any, params: any) => any;
    show: (arr: any, params: any) => any;
    small: (arr: any, params: any) => string;
    smallcaps: (arr: any, params: any) => string;
    tiny: (arr: any, params: any) => string;
    title: (arr: any, params: any) => any;
    transitDest: (arr: any, params: any) => any;
    u: (arr: any, params: any) => string;
    upper: (arr: any, params: any) => any;
    vn: (arr: any, params: any) => any;
    vp: (arr: any, params: any) => any;
};
export declare const Text: {
    _charSwap: (c: any, upper: any, lower: any) => any;
    _findObject: (name: any, params: any, arr: any) => any;
    addDirective: (name: any, fn: any) => void;
    b: (arr: any, params: any) => string;
    back: (arr: any, params: any) => string;
    big: (arr: any, params: any) => string;
    blur: (arr: any, params: any) => string;
    cap: (arr: any, params: any) => any;
    cj: (arr: any, params: any) => any;
    cmd: (arr: any, params: any) => any;
    code: (arr: any, params: any) => string;
    text_processors: {
        $: (arr: any, params: any) => any;
        b: (arr: any, params: any) => string;
        big: (arr: any, params: any) => string;
        cap: (arr: any, params: any) => any;
        cmd: (arr: any, params: any) => any;
        code: (arr: any, params: any) => string;
        command: (arr: any, params: any) => any;
        contents: (arr: any, params: any) => any;
        dateTime: (arr: any, params: any) => any;
        encode: (arr: any, params: any) => string;
        exit: (arr: any, params: any) => any;
        first(arr: any, params: any): any;
        handleIfExists: (arr: any, params: any, reverse: any) => any;
        hour: (arr: any, params: any) => any;
        huge: (arr: any, params: any) => string;
        i: (arr: any, params: any) => string;
        if: (arr: any, params: any) => any;
        ifExists: (arr: any, params: any) => any;
        ifHeld: (arr: any, params: any) => any;
        font: (arr: any, params: any) => string;
        ifHere: (arr: any, params: any) => any;
        color: (arr: any, params: any) => string;
        ifIs: (arr: any, params: any) => any;
        ifLessThan: (arr: any, params: any) => any;
        ifLessThanOrEqual: (arr: any, params: any) => any;
        ifMoreThan: (arr: any, params: any) => any;
        ifMoreThanOrEqual: (arr: any, params: any) => any;
        dialogue: (arr: any, params: any) => string;
        ifNot: (arr: any, params: any) => any;
        back: (arr: any, params: any) => string;
        ifNotExists: (arr: any, params: any) => any;
        colour: (arr: any, params: any) => string;
        ifNotHeld: (arr: any, params: any) => any;
        ifNotHere: (arr: any, params: any) => any;
        ifNotIs: (arr: any, params: any) => any;
        ifNotPlayer: (arr: any, params: any) => any;
        ifPlayer: (arr: any, params: any) => any;
        cj: (arr: any, params: any) => any;
        img: (arr: any, params: any) => string;
        klass: (arr: any, params: any) => string;
        link: (arr: any, params: any) => string;
        exits: (arr: any, params: any) => any;
        lower: (arr: any, params: any) => any;
        exitsHere: (arr: any, params: any) => any;
        money: (arr: any, params: any) => any;
        hereName: (arr: any, params: any) => any;
        multi: (arr: any, params: any) => string;
        hereDesc: (arr: any, params: any) => any;
        nm: (arr: any, params: any) => any;
        blur: (arr: any, params: any) => string;
        number: (arr: any, params: any) => any;
        nms: (arr: any, params: any) => any;
        nv: (arr: any, params: any) => any;
        notfirst: (arr: any, params: any) => any;
        terse: (arr: any, params: any) => any;
        ob: (arr: any, params: any) => any;
        object: (arr: any, params: any) => any;
        objects: (arr: any, params: any) => any;
        objectsHere: (arr: any, params: any) => any;
        once(arr: any, params: any): any;
        ordinal: (arr: any, params: any) => any;
        pa: (arr: any, params: any) => any;
        pa2: (arr: any, params: any) => any;
        pa3: (arr: any, params: any) => any;
        page: (arr: any, params: any) => any;
        sup: (arr: any, params: any) => string;
        popup: (arr: any, params: any) => string;
        ps: (arr: any, params: any) => any;
        pv: (arr: any, params: any) => any;
        rainbow: (arr: any, params: any) => string;
        sub: (arr: any, params: any) => string;
        random: (arr: any, params: any) => any;
        rf: (arr: any, params: any) => any;
        rndalt: (arr: any, params: any) => any;
        roomSet: (arr: any, params: any) => any;
        s: (arr: any, params: any) => string;
        sb: (arr: any, params: any) => any;
        select(arr: any, params: any): any;
        selectEnd: (arr: any, params: any) => any;
        selectNone: (arr: any, params: any) => any;
        selectStart: (arr: any, params: any) => any;
        selectWrap: (arr: any, params: any) => any;
        show: (arr: any, params: any) => any;
        small: (arr: any, params: any) => string;
        smallcaps: (arr: any, params: any) => string;
        tiny: (arr: any, params: any) => string;
        title: (arr: any, params: any) => any;
        transitDest: (arr: any, params: any) => any;
        u: (arr: any, params: any) => string;
        upper: (arr: any, params: any) => any;
        vn: (arr: any, params: any) => any;
        vp: (arr: any, params: any) => any;
    };
    color: (arr: any, params: any) => string;
    colours: string[];
    command: (arr: any, params: any) => any;
    comparisons: {
        '!=': string;
        '!==': string;
        '<': string;
        '<=': string;
        '<>': string;
        '=': string;
        '==': string;
        '>': string;
        '>=': string;
    };
    conjugations: (func: any, arr: any, params: any) => any;
    contents: (arr: any, params: any) => any;
    dateTime: (arr: any, params: any) => any;
    dialogue: (arr: any, params: any) => string;
    encode: (arr: any, params: any) => string;
    exit: (arr: any, params: any) => any;
    exits: (arr: any, params: any) => any;
    exitsHere: (arr: any, params: any) => any;
    findFirstToken: (s: any) => any;
    font: (arr: any, params: any) => string;
    getSaveString: () => string;
    getWhatever: (val: any, params: any, obj: any) => any;
    handleIf: (arr: any, params: any, reverse: any) => any;
    handleIfExists: (arr: any, params: any, reverse: any) => any;
    handleIfHere: (arr: any, params: any, reverse: any, locAtt: any) => any;
    handleIfIs: (arr: any, params: any, reverse: any) => any;
    handleIfLessMoreThan: (arr: any, params: any, moreThan: any, orEqual: any) => any;
    handleIfPlayer: (arr: any, params: any, reverse: any) => any;
    handlePronouns: (arr: any, params: any, pronoun: any) => any;
    hereDesc: (arr: any, params: any) => any;
    hereName: (arr: any, params: any) => any;
    hour: (arr: any, params: any) => any;
    huge: (arr: any, params: any) => string;
    ifExists: (arr: any, params: any) => any;
    ifHeld: (arr: any, params: any) => any;
    ifHere: (arr: any, params: any) => any;
    ifIs: (arr: any, params: any) => any;
    if: (arr: any, params: any) => any;
    ifLessThan: (arr: any, params: any) => any;
    class: (arr: any, params: any) => string;
    ifLessThanOrEqual: (arr: any, params: any) => any;
    i: (arr: any, params: any) => string;
    ifMoreThan: (arr: any, params: any) => any;
    ifMoreThanOrEqual: (arr: any, params: any) => any;
    ifNot: (arr: any, params: any) => any;
    ifNotExists: (arr: any, params: any) => any;
    ifNotHeld: (arr: any, params: any) => any;
    ifNotHere: (arr: any, params: any) => any;
    ifNotIs: (arr: any, params: any) => any;
    ifNotPlayer: (arr: any, params: any) => any;
    ifPlayer: (arr: any, params: any) => any;
    img: (arr: any, params: any) => string;
    link: (arr: any, params: any) => string;
    lower: (arr: any, params: any) => any;
    money: (arr: any, params: any) => any;
    multi: (arr: any, params: any) => string;
    nameFunction: (arr: any, params: any, isPossessive: any) => any;
    nm: (arr: any, params: any) => any;
    nms: (arr: any, params: any) => any;
    notOnce: (arr: any, params: any) => any;
    number: (arr: any, params: any) => any;
    pa: (arr: any, params: any) => any;
    pa2: (arr: any, params: any) => any;
    pa3: (arr: any, params: any) => any;
    processText: typeof processText;
    processTextTp: (str: any, params: any) => any;
    transitDest: (arr: any, params: any) => any;
    u: (arr: any, params: any) => string;
    upper: (arr: any, params: any) => any;
    usedStrings: string[];
};
//# sourceMappingURL=_text.d.ts.map