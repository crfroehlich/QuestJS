import { IDefaults } from '../types/iquest';
export declare const DEFAULT_OBJECT: {
    afterDropIn: any;
    afterLoad: any;
    afterLoadForTemplate(): void;
    afterTakeOut: any;
    beforeSave: any;
    beforeSaveForTemplate(): void;
    canReachThroughThis: () => boolean;
    canSeeThroughThis: () => boolean;
    countAtLoc(loc: any): 1 | 0;
    doEvent(turn: any): void;
    endTurn(turn: any): void;
    eventActive: boolean;
    eventCountdown: number;
    eventIsActive(): any;
    getExits(): any[];
    getSaveString(): any;
    getSaveStringPreamble(item: any): string;
    getWorn: () => boolean;
    hasExit: (dir: any) => boolean;
    isApparentTo(situation: any): any;
    isAtLoc(loc: any, situation: any): any;
    isHeld(): any;
    isHere(): any;
    isHereOrHeld(): any;
    isLocatedAt(loc: any): boolean;
    isUltimatelyHeldBy(obj: any): any;
    moveToFrom(options: any, toLoc: any, fromLoc: any): void;
    pronouns: import("../types/iquest").IFemale;
    saveLoadExclude(att: any): boolean;
    saveLoadExcludedAtts: any[];
    scopeSnapshot(mode: any): void;
    setAlias(alias: any, options?: {}): void;
    testTalkPlayer: () => boolean;
};
export declare const DEFAULT_ROOM: {
    afterEnter: any;
    afterEnterIf: {};
    afterEnterIfFlags: string;
    afterExit: any;
    afterFirstEnter: any;
    beforeEnter: any;
    beforeFirstEnter: any;
    darkDescription: () => any;
    description(): boolean;
    examine(): boolean;
    findExit(dest: any, options: any): any;
    getContents: any;
    getExit(dir: any): any;
    getExitDirs(options: any): any;
    getExitObjs(options: any): any[];
    getExits(options: any): any;
    getRandomExit(options: any): any;
    getReverseExit(dir: any): any;
    goItem(obj: any, dir: any, char: any): any;
    hasExit(dir: any, options: any): boolean;
    isExitHidden(dir: any): any;
    isExitLocked(dir: any): any;
    lightSource: () => number;
    room: boolean;
    setExitHide(dir: any, hidden: any): boolean;
    setExitLock(dir: any, locked: any): boolean;
    visited: number;
};
export declare const DEFAULT_ITEM: {
    getListAlias(loc: any): any;
    getVerbs(): any;
    icon: () => string;
    lightSource: () => number;
    testKeys: (char: any, toLock: any) => boolean;
    transform(item: any): void;
};
export declare const Defaults: IDefaults;
//# sourceMappingURL=_defaults.d.ts.map